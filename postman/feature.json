{
  "info": {
    "_postman_id": "a7e405a2-9a97-4d32-ac7b-d4539a10194e",
    "name": "Test Explore With Me - Locations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "32894128"
  },
  "item": [
    {
      "name": "Location",
      "item": [
        {
          "name": "Добавление новой локации",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.have.status(201);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Локации должны содержать поля: id, lat, lon, radius, name, saved\", function () {\r",
                  "    pm.expect(target).to.have.property('id');\r",
                  "    pm.expect(target).to.have.property('lat');\r",
                  "    pm.expect(target).to.have.property('lon');\r",
                  "    pm.expect(target).to.have.property('name');\r",
                  "    pm.expect(target).to.have.property('radius');\r",
                  "    pm.expect(target).to.have.property('saved');\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": 7.8051,\r\n    \"lon\": 125.0704,\r\n    \"radius\" : 5.0,\r\n    \"name\" : \"New Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации с пустым name",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.badRequest;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": 7.8051,\r\n    \"lon\": 125.0704,\r\n    \"radius\" : 5.0,\r\n    \"name\" : \"  \"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации без обязательного поля lat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.badRequest;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lon\": 125.0704,\r\n    \"radius\" : 5.0,\r\n    \"name\" : \"New Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации с lat > 90",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.badRequest;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": 123.8051,\r\n    \"lon\": 125.0704,\r\n    \"radius\" : 5.0,\r\n    \"name\" : \"New Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации с lat < -90",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.badRequest;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": -123.8051,\r\n    \"lon\": 125.0704,\r\n    \"radius\" : 5.0,\r\n    \"name\" : \"New Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации с lon < -180",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.badRequest;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": 12.8051,\r\n    \"lon\": -190.0704,\r\n    \"radius\" : 5.0,\r\n    \"name\" : \"New Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации с lon > 180",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.badRequest;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": -13.8051,\r\n    \"lon\": 198.0704,\r\n    \"radius\" : 5.0,\r\n    \"name\" : \"New Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации с пустым полем radius",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.have.status(201);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Поле radius должно быть равно 0.0\", function () {\r",
                  "    pm.expect(target.radius).equal(0.0);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": 33.8051,\r\n    \"lon\": 177.0704,\r\n    \"name\" : \"Location without radius\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой локации с существующими координатами",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.have.status(409);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": 33.8051,\r\n    \"lon\": 177.0704,\r\n    \"radius\":100.0,\r\n    \"name\" : \"Wrong Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение всех существующих локаций",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Локации должны содержать поля: id, lat, lon, radius, name, saved\", function () {\r",
                  "    pm.expect(target[0]).to.have.property('id');\r",
                  "    pm.expect(target[0]).to.have.property('lat');\r",
                  "    pm.expect(target[0]).to.have.property('lon');\r",
                  "    pm.expect(target[0]).to.have.property('name');\r",
                  "    pm.expect(target[0]).to.have.property('radius');\r",
                  "    pm.expect(target[0]).to.have.property('saved');\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations?size=1000",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ],
              "query": [
                {
                  "key": "size",
                  "value": "1000"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение всех сохраненных локаций",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Локации должны содержать поля: id, lat, lon, radius, name, saved\", function () {\r",
                  "    pm.expect(target[0]).to.have.property('id');\r",
                  "    pm.expect(target[0]).to.have.property('lat');\r",
                  "    pm.expect(target[0]).to.have.property('lon');\r",
                  "    pm.expect(target[0]).to.have.property('name');\r",
                  "    pm.expect(target[0]).to.have.property('radius');\r",
                  "    pm.expect(target[0]).to.have.property('saved');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Должно быть 2 локации\", function() {\r",
                  "    pm.expect(target.length).to.eql(2);\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations?saved=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ],
              "query": [
                {
                  "key": "saved",
                  "value": "true"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение локаций по названию",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Локации должны содержать поля: id, lat, lon, radius, name, saved\", function () {\r",
                  "    pm.expect(target[0]).to.have.property('id');\r",
                  "    pm.expect(target[0]).to.have.property('lat');\r",
                  "    pm.expect(target[0]).to.have.property('lon');\r",
                  "    pm.expect(target[0]).to.have.property('name');\r",
                  "    pm.expect(target[0]).to.have.property('radius');\r",
                  "    pm.expect(target[0]).to.have.property('saved');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Должны быть найдены две локация\", function () {\r",
                  "    pm.expect(target.length).to.eql(1);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations?name=nEw%20LocAtiOn",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "nEw%20LocAtiOn"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение локации по id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Все поля должны соответствовать\", function () {\r",
                  "    pm.expect(target.id).equal(110);\r",
                  "    pm.expect(target.name).equal(\"New Location\");\r",
                  "    pm.expect(target.lat).equal(7.8051);\r",
                  "    pm.expect(target.lon).equal(125.0704);\r",
                  "    pm.expect(target.radius).equal(5.0);\r",
                  "    pm.expect(target.saved).equal(true);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations/110",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "110"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Попытка изменения названия локации на пустое",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Поле name не должно быть изменено\", function () {\r",
                  "    pm.expect(target.name).equal(\"New Location\");\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\" : \"     \"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations/110",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "110"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Изменение названия локации и координат",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Поле name должно быть изменено\", function () {\r",
                  "    pm.expect(target.name).equal(\"Updated Location\");\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Поле lat должно быть изменено\", function () {\r",
                  "    pm.expect(target.lat).equal(88.1234);\r",
                  "});\r",
                  "pm.test(\"Поле lon должно быть изменено\", function () {\r",
                  "    pm.expect(target.lon).equal(13.1234);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\" : \"Updated Location\",\r\n    \"lat\" : 88.1234,\r\n    \"lon\" : 13.1234\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations/110",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "110"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Попытка изменения lat на значение < 90",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.badRequest;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\" : -100.1111\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations/110",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "110"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Попытка изменения несуществующей локации",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.notFound;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\" : \"Updated Location\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations/1444",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "1444"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление существующей локации",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 204 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.status(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations/111",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "111"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение всех сохраненных локаций после удаления",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Должны быть найдены 1 локация\", function () {\r",
                  "    pm.expect(target.length).to.eql(1);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations?saved=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ],
              "query": [
                {
                  "key": "saved",
                  "value": "true"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Event",
      "item": [
        {
          "name": "Добавление нового пользователя",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Janet Sawayn\",\r\n    \"email\": \"Leonard80@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление новой категории",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Bedfordshire3449\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "categories"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление события попадающего в область сохраненной локации",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Должна быть установлена сохраненная в системе локация, в область которой попадают указанные координаты\", function() {\r",
                  "    pm.expect(source.location.lat).equal(89.1234);\r",
                  "    pm.expect(target.location.lat).equal(88.1234);\r",
                  "    pm.expect(source.location.lon).equal(12.1234);\r",
                  "    pm.expect(target.location.lon).equal(13.1234);\r",
                  "    pm.expect(target.location.name).equal(\"Updated Location\");\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"annotation\":\"Tempora ddsfdfsdfsdfsdfsdfssdsddfsdfsd.\",\r\n    \"category\":1,\r\n    \"description\":\"Fugiat quae necessitatibus qui ad eaque officiis quidem. Alias quis aut molestiae quae vel ex adipisci quia. Corrupti itaque soluta sit et qui deserunt. Pariatur rerum fuga ab quis omnis. Ut voluptatum labore deserunt ut.\\n \\rQuae inerat.\",\r\n    \"eventDate\":\"2024-07-18 17:50:41\",\r\n    \"location\":\r\n        {\r\n            \"lat\": 89.1234,\r\n            \"lon\": 12.1234\r\n        },\r\n    \"paid\":\"true\",\r\n    \"participantLimit\":\"431\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"Aut tempordda nasdsdsm.\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/1/events",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "1",
                "events"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление события с новой локацией",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Должна быть создана новая локация\", function() {\r",
                  "    pm.expect(source.location.lat).equal(target.location.lat);\r",
                  "    pm.expect(source.location.lon).equal(target.location.lon);\r",
                  "    pm.expect(target.location.name).equal(\"User location\");\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"annotation\":\"Tempora ddsfdfsdfsdfsdfsdfssdsddfsdfsd.\",\r\n    \"category\":1,\r\n    \"description\":\"Fugiat quae necessitatibus qui ad eaque officiis quidem. Alias quis aut molestiae quae vel ex adipisci quia. Corrupti itaque soluta sit et qui deserunt. Pariatur rerum fuga ab quis omnis. Ut voluptatum labore deserunt ut.\\n \\rQuae inerat.\",\r\n    \"eventDate\":\"2024-07-18 17:50:41\",\r\n    \"location\":\r\n        {\r\n            \"lat\": 15.1234,\r\n            \"lon\": 89.1234\r\n        },\r\n    \"paid\":\"true\",\r\n    \"participantLimit\":\"431\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"Aut tempordda nasdsdsm.\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/1/events",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "1",
                "events"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Публикация события с id = 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"stateAction\" : \"PUBLISH_EVENT\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/events/107",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "events",
                "107"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение события по id локации",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Должна быть найдена одна локация\", function () {\r",
                  "    pm.expect(target.length).to.eql(1);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/locations?id=110",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "events",
                "locations"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "110"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение событий по координатам",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Должна быть найдена одна локация\", function () {\r",
                  "    pm.expect(target.length).to.eql(1);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/locations?lat=88.1234&lon=13.1234",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "events",
                "locations"
              ],
              "query": [
                {
                  "key": "lat",
                  "value": "88.1234"
                },
                {
                  "key": "lon",
                  "value": "13.1234"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ]
}